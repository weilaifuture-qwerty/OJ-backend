version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: oj_postgres
    environment:
      POSTGRES_DB: onlinejudge
      POSTGRES_USER: ojuser
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - oj_network
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: oj_redis
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    networks:
      - oj_network
    restart: unless-stopped

  backend:
    build:
      context: ./OnlineJudge
      dockerfile: Dockerfile
    container_name: oj_backend
    environment:
      DATABASE_URL: postgresql://ojuser:${DB_PASSWORD}@postgres:5432/onlinejudge
      REDIS_URL: redis://:${REDIS_PASSWORD}@redis:6379/0
      SECRET_KEY: ${SECRET_KEY}
      DEBUG: "False"
      ALLOWED_HOSTS: ${ALLOWED_HOSTS}
      JUDGE_SERVER_TOKEN: ${JUDGE_SERVER_TOKEN}
    volumes:
      - ./OnlineJudge:/app
      - static_files:/app/static
      - media_files:/app/media
      - test_cases:/app/test_cases
    depends_on:
      - postgres
      - redis
    networks:
      - oj_network
    restart: unless-stopped
    command: >
      sh -c "
        python manage.py migrate &&
        python manage.py collectstatic --noinput &&
        gunicorn oj.wsgi:application --bind 0.0.0.0:8000 --workers 4
      "

  frontend:
    build:
      context: ./OnlineJudgeFE
      dockerfile: Dockerfile
    container_name: oj_frontend
    volumes:
      - frontend_dist:/app/dist
    networks:
      - oj_network

  judge_server:
    image: registry.cn-hangzhou.aliyuncs.com/onlinejudge/judge_server
    container_name: oj_judge_server
    read_only: true
    cap_drop:
      - SETPCAP
      - MKNOD
      - NET_BIND_SERVICE
      - SYS_CHROOT
      - SETFCAP
      - FSETID
    tmpfs:
      - /tmp
      - /judger_run:exec,mode=777
      - /spj:exec,mode=777
    volumes:
      - test_cases:/test_case:ro
      - judge_logs:/log
    environment:
      SERVICE_URL: http://judge_server:8080
      BACKEND_URL: http://backend:8000/api/judge_server_heartbeat
      TOKEN: ${JUDGE_SERVER_TOKEN}
    networks:
      - oj_network
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    container_name: oj_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/sites-enabled:/etc/nginx/sites-enabled:ro
      - static_files:/static:ro
      - media_files:/media:ro
      - frontend_dist:/frontend:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
      - frontend
      - judge_server
    networks:
      - oj_network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  static_files:
  media_files:
  test_cases:
  judge_logs:
  frontend_dist:

networks:
  oj_network:
    driver: bridge